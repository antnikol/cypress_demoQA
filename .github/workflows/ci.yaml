name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  cypress-test:
    name: "Cypress tests"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install dependencies
        run: npm install

      - name: Install Express and Cypress
        run: |
          npm install express
          npm install cypress

      - name: Install Allure commandline via NPM
        run: npm install -g allure-commandline --save-dev

      - name: Set CI environment variable
        run: echo "CI=true" >> $GITHUB_ENV

      - name: Start Express server for mock test
        run: |
          echo "
          import express from 'express';
          const app = express();
          const port = 3000;
          app.use(express.static('cypress'));
          app.get('/api/productsList', (req, res) => {
            res.json({ products: [{ name: 'Mocked Product' }] });
          });
          app.listen(port, () => {
            console.log('Mock server is running at http://localhost:' + port);
          });
          " > server.js
          nohup node server.js &

      - name: Wait for the server to be ready
        run: |
          echo "Waiting for the mock server to start..."
          until curl --silent --head --fail http://localhost:3000/api/productsList; do
            echo "Waiting for server..."
            sleep 1
          done
          echo "Mock server is up!"

      - name: Run Cypress tests in Chrome
        run: npx cypress run --headless --env allure=true --browser chrome
        continue-on-error: true

      - name: Run Cypress tests in Firefox
        run: npx cypress run --headless --env allure=true --browser firefox
        continue-on-error: true

      - name: Run Cypress tests in Edge
        run: npx cypress run --headless --env allure=true --browser edge
        continue-on-error: true

      - name: Run Cypress tests in Electron
        run: npx cypress run --headless --env allure=true --browser electron
        continue-on-error: true

      - name: Load test report history
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: allure-history

      - name: Build Allure report
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
          gh_pages: allure-history
          allure_results: allure-results
          allure_history: allure-history

      - name: Publish Allure report
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history

      - name: Upload Allure report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: ./allure-report

      - name: Upload Cypress screenshots (on failure)
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: ./cypress/screenshots

      - name: Stop mock server
        run: |
          if pgrep -f "server.js"; then
            pkill -f server.js
          else
            echo "Mock server already stopped."
          fi
